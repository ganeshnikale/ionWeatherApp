{"version":3,"sources":["./src/app/locator/locator.page.html","./src/app/locator/auto-complate.service.ts","./src/app/locator/locator.module.ts","./src/app/locator/locator.page.scss","./src/app/locator/locator.page.ts"],"names":[],"mappings":"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","file":"locator-locator-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n    <ion-title>locator</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Enter Work Location</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"workLocationauto\\\" [(ngModel)]=\\\"workLocationauto\\\"\\n      (keyup)=\\\"autocomplatePridiction($event, 'work')\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item *ngFor=\\\"let prediction of werkPridiction | async\\\"\\n    (click)=\\\"setLocation(prediction.description,prediction.place_id, 'workpre', 'work')\\\">\\n    <div> {{prediction.description}} </div>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Enter Home Location</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"homeLocationauto\\\" [(ngModel)]=\\\"homeLocationauto\\\"\\n      (keyup)=\\\"autocomplatePridiction($event, 'home')\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item *ngFor=\\\"let prediction of homePridiction | async\\\"\\n    (click)=\\\"setLocation(prediction.description,prediction.place_id, 'homepre', 'home')\\\">\\n    <div> {{prediction.description}} </div>\\n  </ion-item>\\n\\n  <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click) =\\\"this.navigateHome()\\\" [disabled]=\\\"(!placesservice.workLocationData.length) || (!placesservice.homeLocationData.length)\\\">\\n    Search\\n  </ion-button>\\n</ion-content>\"","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoComplateService {\n\n  constructor(private http: HttpClient) { }\n\n  private apiKey:string = 'AIzaSyADtYqSYIWJ5ZBU160TZH6rkLkhK_vboh8';\n  \n  autoComplate(area:string){ \n    let params = new HttpParams()\n    .set(\"input\", area)\n    .set(\"key\", this.apiKey);\n    return this.http.get(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/autocomplete/json?`,{params})\n  }\n\n  latlngbyPlaceId(placeId:string){\n    let params = new HttpParams()\n    .set(\"place_id\",placeId)\n    .set(\"key\", this.apiKey)\n    return this.http.get(`https://maps.googleapis.com/maps/api/geocode/json?`, {params});\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocatorPage } from './locator.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocatorPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LocatorPage]\n})\nexport class LocatorPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvY2F0b3IvbG9jYXRvci5wYWdlLnNjc3MifQ== */\"","import { async } from '@angular/core/testing';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {Form, FormControl} from '@angular/forms';\nimport { PlacesService } from './../home/places.service';\nimport { Prediction} from './../locator/Ilocation'\nimport { empty, Observable } from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AutoComplateService} from './auto-complate.service'\n\n\n@Component({\n\tselector: 'app-locator',\n\ttemplateUrl: './locator.page.html',\n\tstyleUrls: ['./locator.page.scss'],\n})\nexport class LocatorPage implements OnInit {\n\n\tworkLocationauto:string = '';\n\thomeLocationauto:string = '';\n\n\twerkPridiction:Observable<any[]>;\n\thomePridiction:Observable<any[]>;\n\n\tlocationData:any[] = [];\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tpublic placesservice: PlacesService,\n\t\tprivate autocomplateService: AutoComplateService\n\t\t) { }\n\n\tngOnInit() { }\n\n\tautocomplatePridiction(event:string, setTO:string){\n\n\t\t this.autocomplateService.autoComplate(event['target'].value)\n\t\tif( setTO == 'work'){\n\t\t\tthis.werkPridiction = this.autocomplateService.autoComplate(event['target'].value)\n\t\t\t.pipe( map ( x => x['predictions']));\n\t\t} else {\n\t\t\tthis.homePridiction = this.autocomplateService.autoComplate(event['target'].value)\n\t\t\t.pipe( map ( x => x['predictions']));\n\t\t}\n\t}\n\n\tsetLocation(pridiction:string,placeId:string, text:string,setName:string){\n\t\tif( setName == 'work'){\n\t\t\tconsole.log(this.workLocationauto.length)\n\t\t\tthis.workLocationauto = pridiction;\n\t\t\tthis.autocomplateService.latlngbyPlaceId(placeId).pipe(\n\t\t\t\tmap (x => \n\t\t\t\t[{ [text]: [x['results'][0].geometry][0].location, location : pridiction}]\n\t\t\t))\n\t\t\t.subscribe( abc =>{\n\t\t\t\tthis.placesservice.workLocationData = abc;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.homeLocationauto = pridiction;\n\t\t\tthis.autocomplateService.latlngbyPlaceId(placeId).pipe(\n\t\t\t\tmap (x => \n\t\t\t\t[{ [text]: [x['results'][0].geometry][0].location, location : pridiction}]\n\t\t\t))\n\t\t\t.subscribe( abc =>{\n\t\t\tthis.placesservice.homeLocationData = abc;\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.werkPridiction = empty();\n\t\tthis.homePridiction = empty();\n\t}\n\n\tnavigateHome(){\n\t\tthis.router.navigateByUrl('/home/tabs/places')\n\t}\n}\n"],"sourceRoot":""}